@model PointOS.ViewModels.ProductViewModel
@{
    ViewData["Title"] = "Product Details";
}

<div class="container-fluid p-0">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li class="breadcrumb-item"><a href="#">eCommerce</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Product")">Products</a></li>
            <li class="breadcrumb-item active" aria-current="page">Details</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-xl-8 col-lg-7">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Product Information</h5>
                    <div>
                        <a href="@Url.Action("Edit", "Product", new { id = Model.Id })" class="btn btn-primary btn-sm me-2">
                            <i class="fas fa-edit me-1"></i> Edit
                        </a>
                        <a href="@Url.Action("Index", "Product")" class="btn btn-light btn-sm">
                            <i class="fas fa-arrow-left me-1"></i> Back to List
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <div class="text-center mb-3">
                                <img src="@(string.IsNullOrEmpty(Model.ExistingImage) ? "/media/products/default.png" : Model.ExistingImage)"
                                     alt="@Model.Name" class="img-fluid rounded" style="max-height: 300px;">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h4 class="mb-1">@Model.Name</h4>
                            <div class="d-flex align-items-center mb-3">
                                <div class="rating me-2">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="fas fa-star @(i <= Model.Rating ? "text-warning" : "text-muted")"></i>
                                    }
                                </div>
                                <span class="text-muted">(@Model.Rating/5)</span>
                            </div>

                            <div class="d-flex align-items-center mb-3">
                                <h5 class="text-primary mb-0 me-2">$@Model.Price.ToString("F2")</h5>
                                <span class="badge @GetStockBadgeClass(Model.Quantity)">@Model.StockStatus</span>
                            </div>

                            <div class="d-flex align-items-center mb-3">
                                <span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status</span>
                            </div>

                            <p class="text-muted mb-3">SKU: <span class="fw-medium">@Model.SKU</span></p>

                            <p class="text-muted mb-3">Category: <span class="fw-medium">@(Model.CategoryName ?? "Uncategorized")</span></p>

                            <p class="text-muted mb-3">Quantity in Stock: <span class="fw-medium">@Model.Quantity</span></p>
                        </div>
                    </div>

                    <div class="row mt-4">
                        <div class="col-12">
                            <h5 class="mb-3">Description</h5>
                            <p>@(string.IsNullOrEmpty(Model.Description) ? "No description available." : Model.Description)</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-4 col-lg-5">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("Edit", "Product", new { id = Model.Id })" class="btn btn-primary">
                            <i class="fas fa-edit me-2"></i> Edit Product
                        </a>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal">
                            <i class="fas fa-trash me-2"></i> Delete Product
                        </button>
                        <a href="@Url.Action("Index", "Product")" class="btn btn-light">
                            <i class="fas fa-arrow-left me-2"></i> Back to Products
                        </a>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Product Stats</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span>Status</span>
                        <span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span>Inventory</span>
                        <span class="badge @GetStockBadgeClass(Model.Quantity)">@Model.Quantity Items</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span>Stock Status</span>
                        <span class="fw-medium">@Model.StockStatus</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span>Rating</span>
                        <div class="rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star @(i <= Model.Rating ? "text-warning" : "text-muted")"></i>
                            }
                        </div>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <span>Created</span>
                        <span class="fw-medium">@DateTime.Now.AddDays(-30).ToString("MMM dd, yyyy")</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the product <strong>@Model.Name</strong>?</p>
                <p class="text-danger mb-0"><i class="fas fa-exclamation-triangle me-2"></i> This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                <a href="@Url.Action("Delete", "Product", new { id = Model.Id })" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "published" => "badge-published",
            "scheduled" => "badge-scheduled",
            "inactive" => "badge-inactive",
            _ => "bg-secondary"
        };
    }

    public string GetStockBadgeClass(int quantity)
    {
        return quantity switch
        {
            0 => "bg-danger",
            <= 10 => "bg-warning",
            _ => "bg-success"
        };
    }
}
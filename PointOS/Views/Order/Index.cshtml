@model PointOS.ViewModels.OrderListViewModel
@{
    ViewData["Title"] = "Orders";
}

<div class="container-fluid p-0">
    <!-- Header with breadcrumb and actions -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-1">Orders Listing</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a href="#">eCommerce</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Sales</li>
                </ol>
            </nav>
        </div>
        <div>
            <button type="button" class="btn btn-light me-2" data-bs-toggle="modal" data-bs-target="#filterModal">
                <i class="fas fa-filter me-1"></i> Filter
            </button>
            <a href="@Url.Action("Create", "Order")" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Create
            </a>
        </div>
    </div>

    <!-- Error & Success Messages -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Orders Card -->
    <div class="card">
        <div class="card-body p-0">
            <!-- Search and filter bar -->
            <div class="p-4 border-bottom">
                <div class="row align-items-center">
                    <div class="col-md-4">
                        <div class="input-group">
                            <span class="input-group-text bg-light"><i class="fas fa-search"></i></span>
                            <input type="text" id="searchOrder" class="form-control" placeholder="Search Order" 
                                   value="@Model.SearchTerm">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="input-group">
                            <span class="input-group-text bg-light"><i class="fas fa-calendar"></i></span>
                            <input type="text" id="dateRange" class="form-control" placeholder="Pick date range"
                                  value="@(Model.StartDate.HasValue ? Model.StartDate.Value.ToString("MM/dd/yyyy") : "")@(Model.StartDate.HasValue && Model.EndDate.HasValue ? " - " : "")@(Model.EndDate.HasValue ? Model.EndDate.Value.ToString("MM/dd/yyyy") : "")">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select id="statusFilter" class="form-select">
                            <option value="">All Status</option>
                            <option value="@(Model.Status == "Completed" ? "selected" : "")">Completed</option>
                            <option value="@(Model.Status == "Processing" ? "selected" : "")">Processing</option>
                            <option value="@(Model.Status == "Delivering" ? "selected" : "")">Delivering</option>
                            <option value="@(Model.Status == "Failed" ? "selected" : "")">Failed</option>
                            <option value="@(Model.Status == "Cancelled" ? "selected" : "")">Cancelled</option>
                        </select>
                    </div>
                    <div class="col-md-2 text-end">
                        <a href="@Url.Action("Create", "Order")" class="btn btn-primary w-100">
                            <i class="fas fa-plus me-1"></i> Add Order
                        </a>
                    </div>
                </div>
            </div>

            <!-- Orders Table -->
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light text-uppercase">
                        <tr>
                            <th width="40px">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="selectAll">
                                </div>
                            </th>
                            <th>ORDER ID</th>
                            <th>CUSTOMER</th>
                            <th>STATUS</th>
                            <th>TOTAL</th>
                            <th>DATE ADDED</th>
                            <th>DATE MODIFIED</th>
                            <th width="100px">ACTIONS</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model?.Orders != null && Model.Orders.Any())
                        {
                            foreach (var order in Model.Orders)
                            {
                                <tr>
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input order-checkbox" type="checkbox" value="@order.Id">
                                        </div>
                                    </td>
                                    <td>@order.OrderNumber</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(order.CustomerImageUrl))
                                            {
                                                <img src="@order.CustomerImageUrl" alt="@order.CustomerName" class="rounded-circle me-2" width="40" height="40">
                                            }
                                            else
                                            {
                                                <div class="avatar-circle me-2" style="background-color: @order.CustomerInitialsBackgroundColor">
                                                    <span class="avatar-text">@order.CustomerInitials</span>
                                                </div>
                                            }
                                            <span>@order.CustomerName</span>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(order.Status)">@order.Status</span>
                                    </td>
                                    <td>$@order.Total.ToString("F2")</td>
                                    <td>@order.DateAdded.ToString("dd/MM/yyyy")</td>
                                    <td>@(order.DateModified?.ToString("dd/MM/yyyy") ?? "-")</td>
                                    <td>
                                        <div class="dropdown">
                                            <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                Actions <i class="fas fa-chevron-down ms-1"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end">
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("Details", "Order", new { id = order.Id })">
                                                        <i class="fas fa-eye text-primary me-2"></i> View
                                                    </a>
                                                </li>
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("Edit", "Order", new { id = order.Id })">
                                                        <i class="fas fa-edit text-info me-2"></i> Edit
                                                    </a>
                                                </li>
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <a class="dropdown-item delete-order" href="#" data-id="@order.Id" data-number="@order.OrderNumber">
                                                        <i class="fas fa-trash text-danger me-2"></i> Delete
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="text-center py-5">
                                    <div class="py-4">
                                        <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                                        <h5>No orders found</h5>
                                        <p class="text-muted">Try adjusting your search or filter to find what you're looking for.</p>
                                        <a href="@Url.Action("Create", "Order")" class="btn btn-primary mt-2">
                                            <i class="fas fa-plus me-2"></i> Create New Order
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center p-3 border-top">
                <div class="d-flex align-items-center">
                    <select id="pageSizeSelect" class="form-select form-select-sm me-2" style="width: auto;">
                        <option value="@(Model!.PageSize == 10 ? "selected" : "")">10</option>

                        <option value="@(Model.PageSize == 25 ? "selected" : "")">25</option>
                        <option value="@(Model.PageSize == 50 ? "selected" : "")">50</option>
                        <option value="@(Model.PageSize == 100 ? "selected" : "")">100</option>
                    </select>
                    <span class="text-muted small">
                        Showing @((Model!.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems) of @Model.TotalItems orders
                    </span>
                </div>

                <nav aria-label="Orders pagination">
                    <ul class="pagination pagination-sm mb-0">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0)" onclick="goToPage(1)">
                                    <i class="fas fa-angle-double-left"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0)" onclick="goToPage(@(Model.CurrentPage - 1))">
                                    <i class="fas fa-angle-left"></i>
                                </a>
                            </li>
                        }

                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, startPage + 4);
                            startPage = Math.Max(1, endPage - 4);
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="javascript:void(0)" onclick="goToPage(@i)">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0)" onclick="goToPage(@(Model.CurrentPage + 1))">
                                    <i class="fas fa-angle-right"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0)" onclick="goToPage(@Model.TotalPages)">
                                    <i class="fas fa-angle-double-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteOrderModal" tabindex="-1" aria-labelledby="deleteOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteOrderModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the order <strong id="orderNumberToDelete"></strong>?</p>
                <p class="text-danger mb-0"><i class="fas fa-exclamation-triangle me-2"></i> This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                <a href="#" id="confirmDeleteBtn" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
</div>

<!-- Filter Modal -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Filter Orders</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="filterForm" method="get" action="@Url.Action("Index", "Order")">
                    <div class="mb-3">
                        <label class="form-label">Search Term</label>
                        <input type="text" class="form-control" name="searchTerm" value="@Model.SearchTerm" placeholder="Search by order ID or customer name">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Order Status</label>
                        <select class="form-select" name="status">
                            <option value="">All Status</option>
                            <option value="@(Model.Status == "Completed" ? "selected" : "")">Completed</option>
                            <option value="@(Model.Status == "Processing" ? "selected" : "")">Processing</option>
                            <option value="@(Model.Status == "Delivering" ? "selected" : "")">Delivering</option>
                            <option value="@(Model.Status == "Failed" ? "selected" : "")">Failed</option>
                            <option value="@(Model.Status == "Cancelled" ? "selected" : "")">Cancelled</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Date Range</label>
                        <div class="input-group">
                            <input type="date" class="form-control" name="startDate" value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" placeholder="Start Date">
                            <span class="input-group-text">to</span>
                            <input type="date" class="form-control" name="endDate" value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" placeholder="End Date">
                        </div>
                    </div>
                    <input type="hidden" name="page" value="1">
                    <input type="hidden" name="pageSize" value="@Model.PageSize">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-light" onclick="clearFilters()">Clear Filters</button>
                <button type="button" class="btn btn-primary" onclick="applyFilters()">Apply Filters</button>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "completed" => "bg-success",
            "processing" => "bg-primary",
            "delivering" => "bg-info",
            "failed" => "bg-danger",
            "cancelled" => "bg-warning",
            _ => "bg-secondary"
        };
    }
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css">
    <style>
        .avatar-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .avatar-text {
            color: white;
            font-weight: bold;
            font-size: 16px;
        }
        
        .badge {
            font-weight: 500;
            padding: 0.5em 0.75em;
            border-radius: 4px;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script>
        $(document).ready(function() {
            // Date range picker initialization
            $('#dateRange').daterangepicker({
                autoUpdateInput: false,
                locale: {
                    cancelLabel: 'Clear'
                }
            });
            
            $('#dateRange').on('apply.daterangepicker', function(ev, picker) {
                $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
                
                // Update hidden fields in filter form
                $('input[name="startDate"]').val(picker.startDate.format('YYYY-MM-DD'));
                $('input[name="endDate"]').val(picker.endDate.format('YYYY-MM-DD'));
            });
            
            $('#dateRange').on('cancel.daterangepicker', function(ev, picker) {
                $(this).val('');
                
                // Clear hidden fields in filter form
                $('input[name="startDate"]').val('');
                $('input[name="endDate"]').val('');
            });
            
            // Handle select all checkbox
            $('#selectAll').on('change', function() {
                $('.order-checkbox').prop('checked', $(this).is(':checked'));
            });
            
            // Handle individual checkboxes
            $('.order-checkbox').on('change', function() {
                // If any checkbox is unchecked, uncheck "Select All" checkbox
                if (!$(this).is(':checked')) {
                    $('#selectAll').prop('checked', false);
                }
                
                // If all checkboxes are checked, check "Select All" checkbox
                if ($('.order-checkbox:checked').length === $('.order-checkbox').length) {
                    $('#selectAll').prop('checked', true);
                }
            });
            
            // Handle delete confirmation
            $('.delete-order').on('click', function(e) {
                e.preventDefault();
                const orderId = $(this).data('id');
                const orderNumber = $(this).data('number');
                
                $('#orderNumberToDelete').text(orderNumber);
                $('#confirmDeleteBtn').attr('href', '@Url.Action("Delete", "Order")/' + orderId);
                $('#deleteOrderModal').modal('show');
            });
            
            // Quick search and filters
            $('#searchOrder').on('keypress', function(e) {
                if (e.which === 13) {
                    searchOrders();
                }
            });
            
            $('#statusFilter').on('change', function() {
                searchOrders();
            });
            
            $('#pageSizeSelect').on('change', function() {
                searchOrders();
            });
        });
        
        // Search orders with current filters
        function searchOrders() {
            let url = '@Url.Action("Index", "Order")';
            let searchTerm = $('#searchOrder').val();
            let status = $('#statusFilter').val();
            let dateRange = $('#dateRange').val();
            let pageSize = $('#pageSizeSelect').val();
            
            let startDate = '';
            let endDate = '';
            
            if (dateRange) {
                let dates = dateRange.split(' - ');
                if (dates.length === 2) {
                    startDate = moment(dates[0], 'MM/DD/YYYY').format('YYYY-MM-DD');
                    endDate = moment(dates[1], 'MM/DD/YYYY').format('YYYY-MM-DD');
                }
            }
            
            url += '?page=1';
            
            if (searchTerm) {
                url += '&searchTerm=' + encodeURIComponent(searchTerm);
            }
            
            if (status) {
                url += '&status=' + encodeURIComponent(status);
            }
            
            if (startDate) {
                url += '&startDate=' + startDate;
            }
            
            if (endDate) {
                url += '&endDate=' + endDate;
            }
            
            if (pageSize) {
                url += '&pageSize=' + pageSize;
            }
            
            window.location.href = url;
        }
        
        // Go to specific page
        function goToPage(page) {
            let url = '@Url.Action("Index", "Order")';
            let searchTerm = '@Model.SearchTerm';
            let status = '@Model.Status';
            let startDate = '@Model.StartDate?.ToString("yyyy-MM-dd")';
            let endDate = '@Model.EndDate?.ToString("yyyy-MM-dd")';
            let pageSize = '@Model.PageSize';
            
            url += '?page=' + page;
            
            if (searchTerm) {
                url += '&searchTerm=' + encodeURIComponent(searchTerm);
            }
            
            if (status) {
                url += '&status=' + encodeURIComponent(status);
            }
            
            if (startDate) {
                url += '&startDate=' + startDate;
            }
            
            if (endDate) {
                url += '&endDate=' + endDate;
            }
            
            if (pageSize) {
                url += '&pageSize=' + pageSize;
            }
            
            window.location.href = url;
        }
        
        // Apply filters from modal
        function applyFilters() {
            $('#filterForm').submit();
        }
        
        // Clear all filters
        function clearFilters() {
            $('input[name="searchTerm"]').val('');
            $('select[name="status"]').val('');
            $('input[name="startDate"]').val('');
            $('input[name="endDate"]').val('');
            
            $('#filterForm').submit();
        }
    </script>
}